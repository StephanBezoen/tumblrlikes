buildscript {

    repositories {
        mavenCentral()
        maven { url rootProject.ext.Repos.fabric }
    }

    dependencies {
        def classpaths = rootProject.ext.ClassPaths

        classpath classpaths.hugo
        classpath classpaths.greenDAO
        classpath classpaths.fabric
    }
}

def config = rootProject.ext
def plugins = config.Plugins
def libs = config.Libraries
def repos = config.Repos

apply plugin: plugins.android_app
apply plugin: 'kotlin-android'
apply plugin: plugins.hugo
apply plugin: plugins.greenDAO
apply plugin: plugins.fabric

apply from: "$rootDir/config/config.gradle", to: config

android {
    def versions = config.Versions
    def appConfig = config.AppConfig

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk

        applicationId appConfig.id
        versionCode appConfig.versionCode
        versionName appConfig.versionName

        testInstrumentationRunner libs.test_runner

        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "CONSUMER_KEY", "\"" + config.consumer_key + "\""
        if (config.has('blog')) {
            buildConfigField "String", "BLOG", "\"" + config.blog + "\""
        } else {
            buildConfigField "String", "BLOG", "\"\""
        }
    }

    signingConfigs {
        release_keystore {
            storeFile file(config.keystore_file)
            storePassword config.keystore_password
            keyAlias config.keystore_key
            keyPassword config.key_password
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release_keystore
        }
        debug {
            applicationIdSuffix appConfig.debugSuffix
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildToolsVersion '26.0.2'
}

greendao {
    schemaVersion 5
}

repositories {
    maven { url repos.fabric }
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // testing
    androidTestCompile(libs.test_espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile libs.test_junit

    // Android Support
    implementation libs.support_appCompat
    implementation libs.support_design
    implementation libs.support_constraintLayout

    // Rx
    implementation libs.rxAndroid

    // Butterknife
    implementation libs.butterknife
    annotationProcessor libs.annotationProcessorButterknife

    // Pixplicity Prefs
    implementation libs.easyPrefs

    // GSon
    implementation libs.gson

    // Retrofit
    implementation libs.retrofit
    implementation libs.retrofit_gsonConverter
    implementation libs.retrofit_rxAdapter

    // Glide
    implementation libs.glide

    // Dagger
    implementation libs.dagger
    annotationProcessor libs.annotationProcessorDagger

    // OkHttp
    implementation libs.okHttp
    implementation libs.okHttp_loggingInterceptor

    // AutoValue
    compileOnly libs.autoValue
    annotationProcessor libs.autoValue

    // AutoValue Gson
    compileOnly libs.autoValue_gson
    annotationProcessor libs.autoValue_gson

    // GreenDAO
    implementation libs.greenDAO

    // Stetho
    implementation libs.stetho

    // SQL Cipher, to get rid of GreenDAO exceptions
    implementation libs.sqlCipher

    // Fabric
    implementation(libs.fabric) {
        transitive = true;
    }
    implementation libs.firebase
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}

apply plugin: 'com.google.gms.google-services'